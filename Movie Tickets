
#include<stdio.h>
#include<stdlib.h>

void login()
{
	int a=0,i=0;
    char uname[10],c=' '; 
    char pword[10],code[10];
    char user[10]="user";
    char pass[10]="pass";
    do
{
	
    printf("\n  ++++++++++++++++++++++++++++++  LOGIN FIRST  ++++++++++++++++++++++++++++++  ");
    printf(" \n\n                  ENTER USERNAME:-");
	scanf("%s", &uname); 
	printf(" \n\n                  ENTER PASSWORD:-");
	while(i<10)
	{
	    pword[i]=getch();
	    c=pword[i];
	    if(c==13) break;
	    else printf("*");
	    i++;
	}
	pword[i]='\0';
	char code=pword;
	i=0;
    scanf("%s",&pword); 
		if(strcmp(uname,"user")==0 && strcmp(pword,"pass")==0)
	{
	printf("  \n\n\n       WELCOME TO OUR BOOKING SYSTEM !!!! LOGIN IS SUCCESSFUL");
	printf("\n\n\n\t\t\t\tPress any key to continue...");
	getch();
	break;
	}
	else
	{
		printf("\n        SORRY !!!!  LOGIN IS UNSUCESSFUL");
		a++;
		
		getch();
		
	}
}
	while(a<=2);
	if (a>2)
	{
		printf("\nSorry you have entered the wrong username and password for four times!!!");
		
		getch();
		
		}
		system("cls");
		
}



struct book
{
	char code[20];
	char name[20];
	char date[20];
	int cost;
	

}b;

int seat = 60 ;

void insert_details();
void viewAll(); 
void find();
void book_ticket(); 
void old_record();

void main()
{
    login();
	 int ch;
 	do{
	printf("\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
	printf("\n");	
	printf("\t Moive Ticket booking ");
	printf("\n");
	printf("\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
	
	printf("\nEnter >1< To Insert Movie");
   	printf("\nEnter >2< To View All Movie");
	printf("\nEnter >3< To Find Movie ");
	printf("\nEnter >4< To Book Tickets");
	printf("\nEnter >5< To View All Transactions");
   	printf("\nEnter >0< To Exit ");

   	printf("\nEnter your Choice ::");
   	scanf("%d",&ch); 
	   system("cls");	

   	switch (ch)
   	{
    		case 1 :
    		insert_details();
   		break;
		case 2:
    		viewAll();
   		break;
    		
		case 3:
    		find();
   		break;

		case 4:
		book_ticket();
		break;
		
		case 5:
		old_record();
		break;

    		case 0:
    		exit(0);
    		break;

    		default:
    		printf("Wrong choice !");
    		break;
   	}
 }while(ch!=0);
 

	


}


void insert_details()
{
	
	FILE *fp;
	struct book b;
	printf("Enter movie code :- ");	
	scanf("%s",&b.code);
	printf("Enter  name :- ");	
	scanf("%s",&b.name);
	printf("Enter Release Date:- ");	
	scanf("%s",&b.date);
	printf("Enetr Ticket Price:- ");	
	scanf("%d",&b.cost);
	
	fp=fopen("data.txt","a");

	if(fp == NULL)
	{
		printf("FIle not Found");
	}
	else
	{
		fprintf(fp,"%s %s %s %d \n",b.code,b.name,b.date,b.cost);
		printf("Recorded Successfully");
	}
		printf("\n");
	fclose(fp);
	system("cls");
}
void find() 
{
	struct book b;
	FILE *fp;
	
	char ch[20];
	printf("Enter movie code :");
	scanf("%s",ch);

	fp = fopen("data.txt","r");
	if(fp == NULL)
	{
		printf("file does not found !");
		exit(1);

	}
	else
	{	
		while(getc(fp) != EOF)
		{
			fscanf(fp,"%s %s %s %d",b.code,b.name,b.date,&b.cost);
			if(strcmp(b.code,ch) == 0)
			{	
				printf("%s / %s / %s / %d\n",b.code,b.name,b.date,b.cost);
				printf("\n Record Found\n");
				printf("\n\t\tCode ::%s",b.code);
				printf("\n\t\tmovie name ::%s",b.name);
				printf("\n\t\tmovie date ::%s",b.date);
				printf("\n\t\tprice of ticket ::%d",b.cost);
			}
		}
		
	}

	fclose(fp);
	system("cls");
}
void viewAll()
{
	
	char ch;
	FILE *fp;

	fp = fopen("data.txt","r");
	if(fp == NULL)
	{
		printf("file does not found !");
		exit(1);

	}
	else
	{	
		system("cls");
		while( ( ch = fgetc(fp) ) != EOF )
      		printf("%c",ch);
		
	}
	
	fclose(fp);

}
void book_ticket()
{
    struct book b;
    FILE *fp;
    FILE *ufp;

    int total_seat, total_amount;
    char name[20];
    char mobile[20];
    char movie_code[20]; // Code to search for the movie
    int movie_found = 0; // Flag to check if the movie is found

    // Display all movies for the user to choose
    fp = fopen("data.txt", "r");
    if (fp == NULL)
    {
        printf("File does not exist!\n");
        exit(1);
    }

    printf("\nAvailable Movies:\n");
    printf("---------------------------------------------------\n");
    while (fscanf(fp, "%s %s %s %d", b.code, b.name, b.date, &b.cost) != EOF)
    {
        printf("Code: %s, Name: %s, Date: %s, Cost: %d\n", b.code, b.name, b.date, b.cost);
    }
    fclose(fp);

    // Get movie choice from the user
    printf("\nEnter the movie code to book tickets: ");
    scanf("%s", movie_code);

    // Reopen file to find the chosen movie
    fp = fopen("data.txt", "r");
    if (fp == NULL)
    {
        printf("File does not exist!\n");
        exit(1);
    }

    while (fscanf(fp, "%s %s %s %d", b.code, b.name, b.date, &b.cost) != EOF)
    {
        if (strcmp(b.code, movie_code) == 0)
        {
            movie_found = 1; // Movie found
            break;
        }
    }
    fclose(fp);

    if (!movie_found)
    {
        printf("Sorry, no movie found with code %s!\n", movie_code);
        return;
    }

    // Display movie details
    printf("\nMovie Details:\n");
    printf("---------------------------------------------------\n");
    printf("Code: %s\n", b.code);
    printf("Name: %s\n", b.name);
    printf("Date: %s\n", b.date);
    printf("Ticket Price: %d\n", b.cost);

    // Booking details
    printf("\n* Fill Your Details *\n");
    printf("Your Name: ");
    scanf("%s", name);
    printf("Mobile Number: ");
    scanf("%s", mobile);
    printf("Total Number of Tickets: ");
    scanf("%d", &total_seat);

    total_amount = b.cost * total_seat;

    printf("\nEnjoy the Movie!\n");
    printf("---------------------------------------------------\n");
    printf("Name: %s\n", name);
    printf("Mobile Number: %s\n", mobile);
    printf("Movie Name: %s\n", b.name);
    printf("Total Seats: %d\n", total_seat);
    printf("Cost per Ticket: %d\n", b.cost);
    printf("Total Amount: %d\n", total_amount);

    // Log transaction
    ufp = fopen("oldTransection.txt", "a");
    if (ufp == NULL)
    {
        printf("File does not exist!\n");
        exit(1);
    }

    fprintf(ufp, "%s %s %d %d %s %s %d\n", name, mobile, total_seat, total_amount, b.code, b.name, b.cost);
    printf("\nTransaction Recorded Successfully!\n");
    fclose(ufp);
}

//for view all user transections
void old_record()
{
	char ch;
	FILE *fp;

	system("clear");
	
	fp = fopen("oldTransection.txt","r");
	if(fp == NULL)
	{
		printf("file does not found !");
		exit(1);

	}
	else
	{	
		system("cls");
		while( ( ch = fgetc(fp) ) != EOF )
      		printf("%c",ch);
		
	}
	fclose(fp)


}

